#!/bin/bash

MACHINE=${1:-arm}
TARGET=${2:-.}

SLEEP=${SLEEP:-1}
PERFTEST=${PERFTEST:-./perftest}
CALLGRAPH=${CALLGRAPH:-fp}

PERFDATA=perf.data
PERFOUT=perf.out

if [ "$TARGET" = "." ]; then
    RUN=run_target
    PROFILE_BASE=out/profiling/${MACHINE}/$CALLGRAPH
else
    RUN=${RUN:-run_nothing}
    PROFILE_BASE=${TARGET}/root/perftest/out/profiling/${MACHINE}/$CALLGRAPH
fi

run_nothing() {
    echo ""
}

run_host() {
    PERFOUT=perf.native.out
    echo -e "\n==== $(perf version) ===="
    set -x
    perf script -D --header -i $PROFILE_BASE/$PERFDATA --kallsyms=$PROFILE_BASE/kallsyms --symfs=$TARGET -I -F comm,pid,tid,time,event,ip,sym,dso,period > $PROFILE_BASE/$PERFOUT
    set +x
}

run_target() {
    echo -e "\n==== $(perf version) ===="
    echo "$MACHINE: Running perf (sleep=$SLEEP) (callgraph=$CALLGRAPH)"
    mkdir -p $PROFILE_BASE
    SLEEP=$SLEEP $PERFTEST out/bt_perf.$MACHINE $PROFILE_BASE &> $PROFILE_BASE/$PERFTEST.out
    status=$?
    case  $status in
	"1")
	    echo -e "\n===== perf failed, core dumped ====\n"
	    exit $status
	    ;;
	"2")
	    echo -e "\n===== perf failed, application did not start ====\n"
	    exit $status
	    ;;
	*)
	    ;;
    esac
}

samples() {
    echo "$MACHINE: $(grep "^bt_perf" $PROFILE_BASE/$PERFOUT | wc -l)"
}

find_function(){
    echo "$MACHINE [$1]: $(grep " $1 " $PROFILE_BASE/$PERFOUT | wc -l)"
}

find_unknown(){
    echo "$MACHINE [unknown]: $(grep "unknown" $PROFILE_BASE/$PERFOUT | grep bt_perf.$1 | wc -l)"
}

find_all() {
    find_function main
    find_function perf_a
    find_function perf_b
    find_function perf_c
    find_function perf_d
    find_function perf_e
    echo ""
}


$RUN

echo -e "\n---- file size"
ls -al $PROFILE_BASE/$PERFOUT

echo -e "\n---- no of samples"
samples

echo -e "\n---- userspace stack trace"
find_all

echo -e "\n---- unknown stackframe in bt_perf.$MACHINE"
find_unknown
